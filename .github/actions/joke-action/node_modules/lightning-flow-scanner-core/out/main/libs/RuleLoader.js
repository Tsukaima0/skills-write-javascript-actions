"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuleLoader = void 0;
const path_browserify_1 = __importDefault(require("path-browserify"));
class RuleLoader {
    static loadCustomRule(ruleName, filePath) {
        try {
            // Resolve the filePath to an absolute path relative to the current working directory
            const absolutePath = path_browserify_1.default.resolve(process.cwd(), filePath);
            // Synchronously load the module based on the absolute file path
            const module = require(absolutePath);
            // Check if the module exports the given rule
            if (module[ruleName] && typeof module[ruleName] === 'function') {
                // Create an instance of the rule class
                const customRuleInstance = new module[ruleName]();
                return customRuleInstance;
            }
            else {
                // Handle case where module does not contain CustomFlowName
                console.error(`Error: ${filePath} does not export ${ruleName} class.`);
                return undefined;
            }
        }
        catch (error) {
            // Handle import errors
            console.error(`Error importing ${filePath}:`, error);
            return undefined;
        }
    }
}
exports.RuleLoader = RuleLoader;
//# sourceMappingURL=RuleLoader.js.map