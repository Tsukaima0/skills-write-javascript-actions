"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResultDetails = exports.RuleResult = exports.ScanResult = exports.Compiler = exports.FlowVariable = exports.FlowType = exports.FlowResource = exports.FlowNode = exports.FlowElement = exports.FlowAttribute = exports.Flow = exports.fix = exports.scan = exports.parse = exports.getRules = void 0;
const FixFlows_1 = require("./main/libs/FixFlows");
const GetRuleDefinitions_1 = require("./main/libs/GetRuleDefinitions");
const ParseFlows_1 = require("./main/libs/ParseFlows");
const ScanFlows_1 = require("./main/libs/ScanFlows");
function getRules(ruleNames) {
    if (ruleNames && ruleNames.length > 0) {
        const ruleSeverityMap = new Map(ruleNames.map((name) => [name, 'error']));
        return (0, GetRuleDefinitions_1.GetRuleDefinitions)(ruleSeverityMap);
    }
    else {
        return (0, GetRuleDefinitions_1.GetRuleDefinitions)();
    }
}
exports.getRules = getRules;
function parse(selectedUris) {
    return (0, ParseFlows_1.ParseFlows)(selectedUris);
}
exports.parse = parse;
function scan(parsedFlows, ruleOptions) {
    let flows = [];
    for (let flow of parsedFlows) {
        if (!flow.errorMessage && flow.flow) {
            flows.push(flow.flow);
        }
    }
    let scanResults;
    if ((ruleOptions === null || ruleOptions === void 0 ? void 0 : ruleOptions.rules) && Object.entries(ruleOptions.rules).length > 0) {
        scanResults = (0, ScanFlows_1.ScanFlows)(flows, ruleOptions);
    }
    else {
        scanResults = (0, ScanFlows_1.ScanFlows)(flows);
    }
    if (ruleOptions === null || ruleOptions === void 0 ? void 0 : ruleOptions.exceptions) {
        for (const [exceptionName, exceptionElements] of Object.entries(ruleOptions.exceptions)) {
            for (const scanResult of scanResults) {
                if (scanResult.flow.name === exceptionName) {
                    for (const ruleResult of scanResult.ruleResults) {
                        if (exceptionElements[ruleResult.ruleName]) {
                            const exceptions = exceptionElements[ruleResult.ruleName];
                            const filteredDetails = ruleResult.details.filter((detail) => {
                                return !exceptions.includes(detail.name);
                            });
                            ruleResult.details = filteredDetails;
                            ruleResult.occurs = filteredDetails.length > 0;
                        }
                    }
                }
            }
        }
    }
    return scanResults;
}
exports.scan = scan;
function fix(results) {
    let newResults = [];
    for (let result of results) {
        if (result.ruleResults && result.ruleResults.length > 0) {
            let fixables = result.ruleResults.filter((r) => r.ruleName === 'UnusedVariable' && r.occurs || r.ruleName === 'UnconnectedElement' && r.occurs);
            if (fixables && fixables.length > 0) {
                const newFlow = (0, FixFlows_1.FixFlows)(result.flow, fixables);
                result.flow = newFlow;
                newResults.push(result);
            }
        }
    }
    return newResults;
}
exports.fix = fix;
var Flow_1 = require("./main/models/Flow");
Object.defineProperty(exports, "Flow", { enumerable: true, get: function () { return Flow_1.Flow; } });
var FlowAttribute_1 = require("./main/models/FlowAttribute");
Object.defineProperty(exports, "FlowAttribute", { enumerable: true, get: function () { return FlowAttribute_1.FlowAttribute; } });
var FlowElement_1 = require("./main/models/FlowElement");
Object.defineProperty(exports, "FlowElement", { enumerable: true, get: function () { return FlowElement_1.FlowElement; } });
var FlowNode_1 = require("./main/models/FlowNode");
Object.defineProperty(exports, "FlowNode", { enumerable: true, get: function () { return FlowNode_1.FlowNode; } });
var FlowResource_1 = require("./main/models/FlowResource");
Object.defineProperty(exports, "FlowResource", { enumerable: true, get: function () { return FlowResource_1.FlowResource; } });
var FlowType_1 = require("./main/models/FlowType");
Object.defineProperty(exports, "FlowType", { enumerable: true, get: function () { return FlowType_1.FlowType; } });
var FlowVariable_1 = require("./main/models/FlowVariable");
Object.defineProperty(exports, "FlowVariable", { enumerable: true, get: function () { return FlowVariable_1.FlowVariable; } });
var Compiler_1 = require("./main/libs/Compiler");
Object.defineProperty(exports, "Compiler", { enumerable: true, get: function () { return Compiler_1.Compiler; } });
var ScanResult_1 = require("./main/models/ScanResult");
Object.defineProperty(exports, "ScanResult", { enumerable: true, get: function () { return ScanResult_1.ScanResult; } });
var RuleResult_1 = require("./main/models/RuleResult");
Object.defineProperty(exports, "RuleResult", { enumerable: true, get: function () { return RuleResult_1.RuleResult; } });
var ResultDetails_1 = require("./main/models/ResultDetails");
Object.defineProperty(exports, "ResultDetails", { enumerable: true, get: function () { return ResultDetails_1.ResultDetails; } });
//# sourceMappingURL=index.js.map